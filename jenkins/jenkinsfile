pipeline {
    agent any
    environment {
        def apiDir = "${env.WORKSPACE}/db/api"
        def lwcDir = "${env.WORKSPACE}/salesforce/my-conservation-life"
    }
    stages {
        stage('Build API') {
            steps {
                sh """
                    cd ${apiDir}
                    sudo npm install
                    sudo npm update
                """
            }
        }
        stage('Test API') {
            steps {
                sh """
                    cd ${apiDir}
                    sudo npm install-test
                """
            }
        }
        stage('Package API') {
            steps { 
                sh """
                    cd ${apiDir}
                    sudo npm pack
                """
            }
        }
        stage('Build LWC') {
            steps {
                sh """
                    cd ${lwcDir}
                    sudo npm install
                    sudo npm update
                """
            }
        }
        stage('Test LWC') {
            steps {
                sh """
                    cd ${lwcDir}
                    sudo npm install-test
                """
            }
        }
        stage('Package LWC') {
            steps { 
                sh """
                    cd ${lwcDir}
                    sudo npm pack
                """
            }
        }
        stage('Clean') {
            steps {
                sh """
                    cd $WORKSPACE
                    sudo mv ./salesforce/my-conservation-life/my-conservation-life*.tgz ./
                    sudo rm -rf salesforce/ db/ LICENSE README.md package-lock.json
                """
            }
        }
    }
    post {
        success {
            slackSend (color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")        
        }
        failure {
            slackSend (color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
}